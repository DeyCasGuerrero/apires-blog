// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  idProfile   Int    @id @default(autoincrement())
  description String

  user      User   @relation(fields: [userEmail], references: [email])
  userEmail String @unique
}

model User {
  idUser String @id @default(cuid()) //clave principal
  email  String @unique //campo unico
  name   String 
  password String

  profile Profile?
  Blog    Blog[]
}

model Blog {
  idBlog    String    @id @default(cuid())
  title     String
  content   String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  author      User   @relation(fields: [authorEmail], references: [email]) //clave foranea usando un campo unico
  authorEmail String

  // category       Category[] // relación implícita
  BlogOnCategory BlogOnCategory[]
}

model Category {
  idCategory     Int              @id @default(autoincrement())
  name           String
  // blog           Blog[] // relación implícita
  BlogOnCategory BlogOnCategory[]
}

//relación explicita

model BlogOnCategory {
  blogId     String // Campo escalar utilizado en el atributo `@relation` arriba
  blog       Blog     @relation(fields: [blogId], references: [idBlog])
  categoryId Int // Campo escalar utilizado en el atributo `@relation` arriba
  category   Category @relation(fields: [categoryId], references: [idCategory])

  @@id([blogId, categoryId])
}
